version: '1.0'

services:
  point_service:
    build:
      context: ../pointService
      dockerfile: ../pointService/Dockerfile
    ports:
      - "8081:8080"
    environment:
      # Declare which aws services will be used in localstack
      # These variables are needed for localstack
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=testUser
      - AWS_SECRET_ACCESS_KEY=testAccessKey
      - LAMBDA_EXECUTOR=local
      - ENVIRONMENT=docker
      - AWS_REGION=us-west-2
      - AUTH_SERVER_URL=http://localhost:8082
    depends_on:
      - awscli
      - sqs
      - process_new_point
      - dynamodb


  process_new_point:
    build:
      context: ../processNewPoint
      dockerfile: ../processNewPoint/Dockerfile
    environment:
        # Declare which aws services will be used in localstack
        # These variables are needed for localstack
        # yamllint disable-line rule:indentation
        - AWS_DEFAULT_REGION=us-east-1
        - AWS_ACCESS_KEY_ID=testUser
        - AWS_SECRET_ACCESS_KEY=testAccessKey
        - LAMBDA_EXECUTOR=local
        - ENVIRONMENT=docker
        - AWS_REGION=us-west-2

  sqs:
    image: roribio16/alpine-sqs
    platform: linux/amd64
    ports:
      - "9324:9324"
      - "9325:9325"
    stdin_open: true
    tty: true
    volumes:
      - ./config/elasticmq.conf:/opt/custom/elasticmq.conf

  awscli:
    image: amazon/aws-cli
    container_name: awscli
    platform: linux/amd64
    environment:
      AWS_ACCESS_KEY_ID: 'DUMMYIDEXAMPLE'
      AWS_SECRET_ACCESS_KEY: 'DUMMYEXAMPLEKEY'
      REGION: 'us-west-2'
    depends_on:
      - dynamodb
      - sqs
    entrypoint: sh -c "  aws dynamodb create-table --table-name xpto --endpoint-url http://dynamodb:8000  
      --region us-west-2 --attribute-definitions AttributeName=pointId,AttributeType=S AttributeName=aprovado,AttributeType=S --key-schema AttributeName=pointId,KeyType=HASH --provisioned-throughput ReadCapacityUnits=2,WriteCapacityUnits=2 --global-secondary-indexes "{\"IndexName\":\"aprovado-index\",\"KeySchema\":[{\"AttributeName\":\"aprovado\",\"KeyType\":\"HASH\"}],\"Projection\":{\"ProjectionType\":\"ALL\"},\"ProvisionedThroughput\":{\"ReadCapacityUnits\":5,\"WriteCapacityUnits\":5}}"
      && tail -f /dev/null"

  dynamodb:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb
    ports:
      - "8000:8000"
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
