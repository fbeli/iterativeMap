version: '1.0'

services:
  html:
    image: fbeli/becb_html:0.1.6
    container_name: points
    ports:
      - "80:80"
    volumes:
      - files:/usr/share/nginx/html
    depends_on:
      - point_service

  point_service:
    container_name: point_service
    build:
      context: ../pointService
      dockerfile: ../pointService/Dockerfile
    ports:
      - "8081:8081"
    environment:
      # Declare which aws services will be used in localstack
      # These variables are needed for localstack
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=testUser
      - AWS_SECRET_ACCESS_KEY=testAccessKey
      - LAMBDA_EXECUTOR=local
      - ENVIRONMENT=docker
      - AWS_REGION=us-east-1
      - AUTH_SERVER_URL=http://auth:8082
      - FILE_ENDPOINT=https://guidemapper-points-dev.s3.eu-central-1.amazonaws.com/file/
      - QUEUE_HOST=http://sqs:9324/queue/
    depends_on:
      - awscli
      - sqs
      - process_new_point
      - dynamodb
      - auth

  process_new_point:
    container_name: process_new_point
    build:
      context: ../processNewPoint
      dockerfile: ../processNewPoint/Dockerfile
    environment:
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=testUser
      - AWS_SECRET_ACCESS_KEY=testAccessKey
      - LAMBDA_EXECUTOR=local
      - ENVIRONMENT=docker
      - AWS_REGION=us-east-1
      - QUEUE_HOST=http://sqs:9324
      - DYNAMODB_HOST=http://dynamodb:8000
      - SERVICE_ENDPOINT=http://point_service:8080
      - FILE_DIRECTORY=file
    depends_on:
      - dynamodb
    volumes:
      - files:/app/file
    command: ["/wait-for-it.sh", "dynamodb:8000", "-t", "180", "--", "/entrypoint.sh"]

  sqs:
    container_name: sqs
    image: roribio16/alpine-sqs
    platform: linux/amd64
    ports:
      - "9324:9324"
      - "9325:9325"
    stdin_open: true
    tty: true
    volumes:
      - ./config/elasticmq.conf:/opt/custom/elasticmq.conf

  awscli:
    image: amazon/aws-cli
    container_name: awscli
    platform: linux/amd64
    environment:
      AWS_ACCESS_KEY_ID: 'DUMMYIDEXAMPLE'
      AWS_SECRET_ACCESS_KEY: 'DUMMYEXAMPLEKEY'
      REGION: 'us-west-2'
    depends_on:
      - dynamodb
      - sqs
    entrypoint: sh -c '  aws dynamodb create-table --table-name points --endpoint-url http://dynamodb:8000  --region us-east-1 --attribute-definitions AttributeName=pointId,AttributeType=S AttributeName=aprovado,AttributeType=S --key-schema AttributeName=pointId,KeyType=HASH --provisioned-throughput ReadCapacityUnits=2,WriteCapacityUnits=2 --global-secondary-indexes "{\"IndexName\":\"aprovado-index\",\"KeySchema\":[{\"AttributeName\":\"aprovado\",\"KeyType\":\"HASH\"}],\"Projection\":{\"ProjectionType\":\"ALL\"},\"ProvisionedThroughput\":{\"ReadCapacityUnits\":5,\"WriteCapacityUnits\":5}}"
      && tail -f /dev/null'

  dynamodb:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb
    ports:
      - "8000:8000"
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal

  auth:
    image: fbeli/becb_auth:0.1
    container_name: auth
    ports:
      - "8082:8082"
    environment:
      - DB_URL=mysql:3306
    depends_on:
      - mysql
    command: ["/wait-for-it.sh", "mysql:3306", "-t", "180", "--", "/entrypoint.sh"]

  mysql:
    container_name: mysql
    image: mysql:8.2.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=123
      - MYSQL_DATABASE=auth
      - MYSQL_USER=teste
      - MYSQL_PASSWORD=123
    volumes:
      - ./mysql:/var/lib/mysql

volumes:
  files:
